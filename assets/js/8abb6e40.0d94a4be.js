"use strict";(self.webpackChunklevelupdocs=self.webpackChunklevelupdocs||[]).push([[3817],{9585:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var s=i(4848),n=i(8453);const l={description:"Requires a recruit's profile field to match certain values.",title:"Profile field value"},r=void 0,a={id:"objectives/profile-field-value",title:"Profile field value",description:"Requires a recruit's profile field to match certain values.",source:"@site/quest/docs/objectives/profile-field-value.mdx",sourceDirName:"objectives",slug:"/objectives/profile-field-value",permalink:"/quest/docs/objectives/profile-field-value",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{description:"Requires a recruit's profile field to match certain values.",title:"Profile field value"},sidebar:"tutorialSidebar",previous:{title:"Complete section",permalink:"/quest/docs/objectives/complete-section"},next:{title:"Take a quiz",permalink:"/quest/docs/objectives/quiz-attempt"}},o={},c=[{value:"Use case",id:"use-case",level:2},{value:"Setting up",id:"setting-up",level:2},{value:"Number value",id:"number-value",level:3},{value:"Text value",id:"text-value",level:3},{value:"Boolean value",id:"boolean-value",level:3}];function d(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Track the value of a recruit's profile field, and mark the objective as complete when it meets the criteria."}),"\n",(0,s.jsx)(t.h2,{id:"use-case",children:"Use case"}),"\n",(0,s.jsx)(t.p,{children:"This objective is likely most useful when the value of profile fields are managed by external systems. For example recruits could be achieving certifications in an external system, and that system updates a profile field when the certification is achieved. The objective can then track that profile field and mark the objective as complete when the certification is achieved."}),"\n",(0,s.jsx)(t.h2,{id:"setting-up",children:"Setting up"}),"\n",(0,s.jsx)(t.p,{children:'Select the profile field to track and how to treat the value found in the field: as a number, as text, or as a boolean. Quest supports tracking fields of type "Text input" and "Checkbox". It is expected that "Checkbox" fields are treated as boolean values.'}),"\n",(0,s.jsx)(t.h3,{id:"number-value",children:"Number value"}),"\n",(0,s.jsx)(t.p,{children:"When the value is treated as a number, it will be treated as a whole number (integer), and rounding will apply if the value contains decimal places."}),"\n",(0,s.jsxs)(t.p,{children:["The option ",(0,s.jsx)(t.strong,{children:'"Track progress from zero to the value"'})," indicates whether the value is expected to increase to a certain amount. For example, if the field contains a certain number of points, and the objective is to reach a certain number of points, then this option should be enabled. This will allow the objective to track progress towards the target value and display a progress bar."]}),"\n",(0,s.jsxs)(t.p,{children:["The option ",(0,s.jsx)(t.strong,{children:'"Keep track of the best value recorded"'})," determines whether the objective strictly tracks the value found in the field, or if it allows it to comes down. For example, if the field was tracking the latest score achieved in a test, but the objective should track the highest score achieved, then this option should be enabled."]}),"\n",(0,s.jsx)(t.h3,{id:"text-value",children:"Text value"}),"\n",(0,s.jsx)(t.p,{children:"The text value value will be compared to the value of the field using the case-sensitivity defined below."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Comparison"}),(0,s.jsx)(t.th,{children:"Case-sensitive"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Is exactly"}),(0,s.jsx)(t.td,{children:"Yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Is different than"}),(0,s.jsx)(t.td,{children:"Yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Contains"}),(0,s.jsx)(t.td,{children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Does not contain"}),(0,s.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"boolean-value",children:"Boolean value"}),"\n",(0,s.jsxs)(t.p,{children:["If the field value is ",(0,s.jsx)(t.code,{children:"1"}),", ",(0,s.jsx)(t.code,{children:"true"}),", ",(0,s.jsx)(t.code,{children:"yes"}),", ",(0,s.jsx)(t.code,{children:"on"}),", or ",(0,s.jsx)(t.code,{children:"enabled"}),", all case-insensitive, the value will be considered true. Otherwise it will be considered false."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var s=i(6540);const n={},l=s.createContext(n);function r(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);